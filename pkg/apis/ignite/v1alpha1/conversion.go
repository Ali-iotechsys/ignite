package v1alpha1

import (
	"github.com/weaveworks/ignite/pkg/apis/ignite"
	"k8s.io/apimachinery/pkg/conversion"
)

// Convert_ignite_VMSpec_To_v1alpha1_VMSpec calls the autogenerated conversion function along with custom conversion logic
func Convert_ignite_VMSpec_To_v1alpha1_VMSpec(in *ignite.VMSpec, out *VMSpec, s conversion.Scope) error {
	// VMSpecStorage are not supported by v1alpha1, so just ignore the warning by calling this manually
	return autoConvert_ignite_VMSpec_To_v1alpha1_VMSpec(in, out, s)
}

// Convert_ignite_VMSpec_To_v1alpha1_VMSpec calls the autogenerated conversion function along with custom conversion logic
func Convert_v1alpha1_VMSpec_To_ignite_VMSpec(in *VMSpec, out *ignite.VMSpec, s conversion.Scope) error {
	// VMSpecStorage is not supported by v1alpha1, so just ignore the warning by calling this manually
	return autoConvert_v1alpha1_VMSpec_To_ignite_VMSpec(in, out, s)
}

// Convert_ignite_VMStatus_To_v1alpha1_VMStatus calls the autogenerated conversion function along with custom conversion logic
func Convert_ignite_VMStatus_To_v1alpha1_VMStatus(in *ignite.VMStatus, out *VMStatus, s conversion.Scope) error {
	if err := autoConvert_ignite_VMStatus_To_v1alpha1_VMStatus(in, out, s); err != nil {
		return err
	}

	// Convert in.Running to out.State
	if in.Running {
		out.State = VMStateRunning
	} else {
		out.State = VMStateStopped
	}

	return nil
}

// Convert_v1alpha1_VMStatus_To_ignite_VMStatus calls the autogenerated conversion function along with custom conversion logic
func Convert_v1alpha1_VMStatus_To_ignite_VMStatus(in *VMStatus, out *ignite.VMStatus, s conversion.Scope) error {
	if err := autoConvert_v1alpha1_VMStatus_To_ignite_VMStatus(in, out, s); err != nil {
		return err
	}

	// Convert in.State to out.Running
	out.Running = in.State == VMStateRunning

	return nil
}
